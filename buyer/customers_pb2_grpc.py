# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import customers_pb2 as customers__pb2


class CustomersStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UpdateSellerFeedback = channel.unary_unary(
                '/customers.Customers/UpdateSellerFeedback',
                request_serializer=customers__pb2.SellerFeedbackMessage.SerializeToString,
                response_deserializer=customers__pb2.generalResponse.FromString,
                )
        self.GetUserDB = channel.unary_unary(
                '/customers.Customers/GetUserDB',
                request_serializer=customers__pb2.UserCredentialsMessage.SerializeToString,
                response_deserializer=customers__pb2.generalResponse.FromString,
                )
        self.RegisterSellerDB = channel.unary_unary(
                '/customers.Customers/RegisterSellerDB',
                request_serializer=customers__pb2.UserCredentialsMessage.SerializeToString,
                response_deserializer=customers__pb2.generalResponse.FromString,
                )
        self.CreateAccount = channel.unary_unary(
                '/customers.Customers/CreateAccount',
                request_serializer=customers__pb2.CreateAccountRequestMessage.SerializeToString,
                response_deserializer=customers__pb2.generalResponse.FromString,
                )
        self.Login = channel.unary_unary(
                '/customers.Customers/Login',
                request_serializer=customers__pb2.LoginRequestMessage.SerializeToString,
                response_deserializer=customers__pb2.generalResponse.FromString,
                )
        self.AddToCart = channel.unary_unary(
                '/customers.Customers/AddToCart',
                request_serializer=customers__pb2.AddToCartRequestMessage.SerializeToString,
                response_deserializer=customers__pb2.generalResponse.FromString,
                )
        self.RemoveItemFromCart = channel.unary_unary(
                '/customers.Customers/RemoveItemFromCart',
                request_serializer=customers__pb2.RemoveFromCartRequestMessage.SerializeToString,
                response_deserializer=customers__pb2.generalResponse.FromString,
                )
        self.ClearCart = channel.unary_unary(
                '/customers.Customers/ClearCart',
                request_serializer=customers__pb2.ClearCartRequestMessage.SerializeToString,
                response_deserializer=customers__pb2.generalResponse.FromString,
                )
        self.DisplayCart = channel.unary_unary(
                '/customers.Customers/DisplayCart',
                request_serializer=customers__pb2.DisplayCartRequestMessage.SerializeToString,
                response_deserializer=customers__pb2.DisplayCartResponseMessage.FromString,
                )
        self.MakePurchase = channel.unary_unary(
                '/customers.Customers/MakePurchase',
                request_serializer=customers__pb2.MakePurchaseMessage.SerializeToString,
                response_deserializer=customers__pb2.generalResponse.FromString,
                )
        self.PurchaseHistory = channel.unary_unary(
                '/customers.Customers/PurchaseHistory',
                request_serializer=customers__pb2.PurchaseHistoryMessage.SerializeToString,
                response_deserializer=customers__pb2.generalResponse.FromString,
                )
        self.ProvideFeedback = channel.unary_unary(
                '/customers.Customers/ProvideFeedback',
                request_serializer=customers__pb2.ProvideFeedbackMessage.SerializeToString,
                response_deserializer=customers__pb2.generalResponse.FromString,
                )
        self.GetSellerRating = channel.unary_unary(
                '/customers.Customers/GetSellerRating',
                request_serializer=customers__pb2.GetSellerRatingMessage.SerializeToString,
                response_deserializer=customers__pb2.generalResponse.FromString,
                )
        self.Logout = channel.unary_unary(
                '/customers.Customers/Logout',
                request_serializer=customers__pb2.LogoutMessage.SerializeToString,
                response_deserializer=customers__pb2.generalResponse.FromString,
                )
        self.GetBuyerId = channel.unary_unary(
                '/customers.Customers/GetBuyerId',
                request_serializer=customers__pb2.GetBuyerIdRequestMessage.SerializeToString,
                response_deserializer=customers__pb2.GetBuyerIdResponseMessage.FromString,
                )
        self.SetLoginState = channel.unary_unary(
                '/customers.Customers/SetLoginState',
                request_serializer=customers__pb2.SetLoginStateRequestMessage.SerializeToString,
                response_deserializer=customers__pb2.generalResponse.FromString,
                )
        self.HasProvidedFeedback = channel.unary_unary(
                '/customers.Customers/HasProvidedFeedback',
                request_serializer=customers__pb2.HasProvidedFeedbackRequestMessage.SerializeToString,
                response_deserializer=customers__pb2.HasProvidedFeedbackResponseMessage.FromString,
                )
        self.UpdateCustomerProvideFeedback = channel.unary_unary(
                '/customers.Customers/UpdateCustomerProvideFeedback',
                request_serializer=customers__pb2.UpdateProvideFeedbackRequestMessage.SerializeToString,
                response_deserializer=customers__pb2.generalResponse.FromString,
                )
        self.UpdateSellerFeedbackFromBuyer = channel.unary_unary(
                '/customers.Customers/UpdateSellerFeedbackFromBuyer',
                request_serializer=customers__pb2.UpdateSellerFeedbackRequestMessage.SerializeToString,
                response_deserializer=customers__pb2.generalResponse.FromString,
                )


class CustomersServicer(object):
    """Missing associated documentation comment in .proto file."""

    def UpdateSellerFeedback(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserDB(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterSellerDB(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddToCart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveItemFromCart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClearCart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisplayCart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MakePurchase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PurchaseHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProvideFeedback(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSellerRating(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Logout(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBuyerId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetLoginState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HasProvidedFeedback(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCustomerProvideFeedback(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSellerFeedbackFromBuyer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CustomersServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UpdateSellerFeedback': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSellerFeedback,
                    request_deserializer=customers__pb2.SellerFeedbackMessage.FromString,
                    response_serializer=customers__pb2.generalResponse.SerializeToString,
            ),
            'GetUserDB': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserDB,
                    request_deserializer=customers__pb2.UserCredentialsMessage.FromString,
                    response_serializer=customers__pb2.generalResponse.SerializeToString,
            ),
            'RegisterSellerDB': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterSellerDB,
                    request_deserializer=customers__pb2.UserCredentialsMessage.FromString,
                    response_serializer=customers__pb2.generalResponse.SerializeToString,
            ),
            'CreateAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAccount,
                    request_deserializer=customers__pb2.CreateAccountRequestMessage.FromString,
                    response_serializer=customers__pb2.generalResponse.SerializeToString,
            ),
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=customers__pb2.LoginRequestMessage.FromString,
                    response_serializer=customers__pb2.generalResponse.SerializeToString,
            ),
            'AddToCart': grpc.unary_unary_rpc_method_handler(
                    servicer.AddToCart,
                    request_deserializer=customers__pb2.AddToCartRequestMessage.FromString,
                    response_serializer=customers__pb2.generalResponse.SerializeToString,
            ),
            'RemoveItemFromCart': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveItemFromCart,
                    request_deserializer=customers__pb2.RemoveFromCartRequestMessage.FromString,
                    response_serializer=customers__pb2.generalResponse.SerializeToString,
            ),
            'ClearCart': grpc.unary_unary_rpc_method_handler(
                    servicer.ClearCart,
                    request_deserializer=customers__pb2.ClearCartRequestMessage.FromString,
                    response_serializer=customers__pb2.generalResponse.SerializeToString,
            ),
            'DisplayCart': grpc.unary_unary_rpc_method_handler(
                    servicer.DisplayCart,
                    request_deserializer=customers__pb2.DisplayCartRequestMessage.FromString,
                    response_serializer=customers__pb2.DisplayCartResponseMessage.SerializeToString,
            ),
            'MakePurchase': grpc.unary_unary_rpc_method_handler(
                    servicer.MakePurchase,
                    request_deserializer=customers__pb2.MakePurchaseMessage.FromString,
                    response_serializer=customers__pb2.generalResponse.SerializeToString,
            ),
            'PurchaseHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.PurchaseHistory,
                    request_deserializer=customers__pb2.PurchaseHistoryMessage.FromString,
                    response_serializer=customers__pb2.generalResponse.SerializeToString,
            ),
            'ProvideFeedback': grpc.unary_unary_rpc_method_handler(
                    servicer.ProvideFeedback,
                    request_deserializer=customers__pb2.ProvideFeedbackMessage.FromString,
                    response_serializer=customers__pb2.generalResponse.SerializeToString,
            ),
            'GetSellerRating': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSellerRating,
                    request_deserializer=customers__pb2.GetSellerRatingMessage.FromString,
                    response_serializer=customers__pb2.generalResponse.SerializeToString,
            ),
            'Logout': grpc.unary_unary_rpc_method_handler(
                    servicer.Logout,
                    request_deserializer=customers__pb2.LogoutMessage.FromString,
                    response_serializer=customers__pb2.generalResponse.SerializeToString,
            ),
            'GetBuyerId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBuyerId,
                    request_deserializer=customers__pb2.GetBuyerIdRequestMessage.FromString,
                    response_serializer=customers__pb2.GetBuyerIdResponseMessage.SerializeToString,
            ),
            'SetLoginState': grpc.unary_unary_rpc_method_handler(
                    servicer.SetLoginState,
                    request_deserializer=customers__pb2.SetLoginStateRequestMessage.FromString,
                    response_serializer=customers__pb2.generalResponse.SerializeToString,
            ),
            'HasProvidedFeedback': grpc.unary_unary_rpc_method_handler(
                    servicer.HasProvidedFeedback,
                    request_deserializer=customers__pb2.HasProvidedFeedbackRequestMessage.FromString,
                    response_serializer=customers__pb2.HasProvidedFeedbackResponseMessage.SerializeToString,
            ),
            'UpdateCustomerProvideFeedback': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCustomerProvideFeedback,
                    request_deserializer=customers__pb2.UpdateProvideFeedbackRequestMessage.FromString,
                    response_serializer=customers__pb2.generalResponse.SerializeToString,
            ),
            'UpdateSellerFeedbackFromBuyer': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSellerFeedbackFromBuyer,
                    request_deserializer=customers__pb2.UpdateSellerFeedbackRequestMessage.FromString,
                    response_serializer=customers__pb2.generalResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'customers.Customers', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Customers(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def UpdateSellerFeedback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/customers.Customers/UpdateSellerFeedback',
            customers__pb2.SellerFeedbackMessage.SerializeToString,
            customers__pb2.generalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserDB(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/customers.Customers/GetUserDB',
            customers__pb2.UserCredentialsMessage.SerializeToString,
            customers__pb2.generalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterSellerDB(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/customers.Customers/RegisterSellerDB',
            customers__pb2.UserCredentialsMessage.SerializeToString,
            customers__pb2.generalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/customers.Customers/CreateAccount',
            customers__pb2.CreateAccountRequestMessage.SerializeToString,
            customers__pb2.generalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/customers.Customers/Login',
            customers__pb2.LoginRequestMessage.SerializeToString,
            customers__pb2.generalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddToCart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/customers.Customers/AddToCart',
            customers__pb2.AddToCartRequestMessage.SerializeToString,
            customers__pb2.generalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveItemFromCart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/customers.Customers/RemoveItemFromCart',
            customers__pb2.RemoveFromCartRequestMessage.SerializeToString,
            customers__pb2.generalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClearCart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/customers.Customers/ClearCart',
            customers__pb2.ClearCartRequestMessage.SerializeToString,
            customers__pb2.generalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisplayCart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/customers.Customers/DisplayCart',
            customers__pb2.DisplayCartRequestMessage.SerializeToString,
            customers__pb2.DisplayCartResponseMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MakePurchase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/customers.Customers/MakePurchase',
            customers__pb2.MakePurchaseMessage.SerializeToString,
            customers__pb2.generalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PurchaseHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/customers.Customers/PurchaseHistory',
            customers__pb2.PurchaseHistoryMessage.SerializeToString,
            customers__pb2.generalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProvideFeedback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/customers.Customers/ProvideFeedback',
            customers__pb2.ProvideFeedbackMessage.SerializeToString,
            customers__pb2.generalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSellerRating(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/customers.Customers/GetSellerRating',
            customers__pb2.GetSellerRatingMessage.SerializeToString,
            customers__pb2.generalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Logout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/customers.Customers/Logout',
            customers__pb2.LogoutMessage.SerializeToString,
            customers__pb2.generalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBuyerId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/customers.Customers/GetBuyerId',
            customers__pb2.GetBuyerIdRequestMessage.SerializeToString,
            customers__pb2.GetBuyerIdResponseMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetLoginState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/customers.Customers/SetLoginState',
            customers__pb2.SetLoginStateRequestMessage.SerializeToString,
            customers__pb2.generalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HasProvidedFeedback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/customers.Customers/HasProvidedFeedback',
            customers__pb2.HasProvidedFeedbackRequestMessage.SerializeToString,
            customers__pb2.HasProvidedFeedbackResponseMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCustomerProvideFeedback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/customers.Customers/UpdateCustomerProvideFeedback',
            customers__pb2.UpdateProvideFeedbackRequestMessage.SerializeToString,
            customers__pb2.generalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateSellerFeedbackFromBuyer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/customers.Customers/UpdateSellerFeedbackFromBuyer',
            customers__pb2.UpdateSellerFeedbackRequestMessage.SerializeToString,
            customers__pb2.generalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
